# minimal EBNF+Actions PEG parser
# manually maintained, should be in sync with boot.py
spaces:
    | " "+ | "" { Discard() }
nothing:
    | "''" | '""' { Nothing() }
anything:
    | "." { Anything() }
end_line:
    | "
" {Discard()}
identifier:
    | ( "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "_" )+ { .* }

literal:
    | ('"' ( (!'"') . )+ '"') | ("'" ( (!"'") . )+ "'") { Literal(.*[1:-1]) }

group:
    | "(" spaces expr=expr spaces ")" { .expr }
choice:
    | try=expr spaces "|" spaces else=expr { either(.try, .else) }
sequence:
    | head=expr spaces tail=expr { chain(.head, .tail) }
repeat:
    | expr=expr spaces "+" { Repeat(.expr) }
capture:
    | name=identifier spaces "=" spaces expr=(reference | group) { Capture(.name, .expr) }
reference:
    | name=identifier { Reference(.name) }
reject:
    | "!" spaces expr=expr { Not(.expr) }
expr:
    | expr=(choice | sequence | repeat | capture | reference | group | literal | reject | anything | nothing) { .expr }

rule:
    | "|" spaces expr=expr spaces action=action { Rule(.expr, .action) }
action:
    | "{" body=(((!"}") .)+) "}" { Action(.body) }

comment:
    | "#" ((!end_line) .)+ end_line { Discard() }
blank:
    | spaces end_line { Discard() }
define:
    | name=identifier ":" spaces end_line rules=rules { (.name, .rules) }
rules:
    | " " spaces try=rule spaces end_line else=rules { either(.try, .else) }
    | " " spaces rule=rule spaces end_line { .rule }
top:
    | ( define | comment | blank )+ { .* }
